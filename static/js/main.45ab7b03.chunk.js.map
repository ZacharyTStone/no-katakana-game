{"version":3,"sources":["Components/Title.js","Components/Rules.js","Components/Word.js","Components/Timer.js","Components/TimerDiv.js","App.js","reportWebVitals.js","index.js"],"names":["Title","className","Rules","props","useState","language","setLanguage","rulesVisiblity","setRulesVisiblity","setRulesVisiblityHandler","changeLanguage","onClick","Word","words","currentWord","setCurrentWord","randomIndex","Math","floor","random","length","CountDownTimer","hoursMinSecs","hours","minutes","seconds","React","hrs","mins","secs","setTime","reset","parseInt","useEffect","timerId","setInterval","clearInterval","toString","padStart","TimerDiv","timerVisibility","setTimerVisibility","console","log","Timer","Words","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.45ab7b03.chunk.js","sourcesContent":["import \"../Components/Title.css\";\n\nconst Title = () => {\n  return (\n    <div className=\"title-div\">\n      <h1 className=\"title\"> ノーカタカタ </h1>\n    </div>\n  );\n};\n\nexport default Title;\n","import React, { useState } from \"react\";\nimport \"../Components/Rules.css\";\n\nconst Rules = (props) => {\n  const [language, setLanguage] = useState(\"Japanese\");\n  const [rulesVisiblity, setRulesVisiblity] = useState(false);\n\n  const setRulesVisiblityHandler = () => {\n    setRulesVisiblity(!rulesVisiblity);\n  };\n\n  const changeLanguage = () => {\n    if (language === \"English\") {\n      setLanguage(\"Japanese\");\n    } else {\n      setLanguage(\"English\");\n    }\n  };\n\n  if (language === \"English\" && rulesVisiblity === true) {\n    return (\n      <div className=\"rules-control-div\">\n        <button onClick={setRulesVisiblityHandler} className=\"rules-button\">\n          Hide Rules{\" \"}\n        </button>\n        <div className=\"rules-div\">\n          <h3>Rules</h3>\n          <p>\n            GOAL:\n            <br />\n            <br /> Give hints to the other player about your word without using\n            ANY katakana/foreign loan words (like チーズ　or　コーヒー).\n            <br />\n            <br />\n            <br />\n            <h3>HOW TO PLAY: </h3>\n            <br />\n            <br /> 1st: open this site on your phone and your friends phone.\n            <br />\n            <br /> 2nd: the first player explains the word on their screen to\n            the other player without using any foreign loan words.\n            <br />\n            <br />\n            3rd: when the other player guesses the word correctly, switch roles.\n            <br />\n            <br />\n          </p>\n          <button onClick={changeLanguage} className=\"language-button\">\n            {\" \"}\n            日本語{\" \"}\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  if (language === \"Japanese\" && rulesVisiblity === true) {\n    return (\n      <div className=\"rules-control-div\">\n        <button onClick={setRulesVisiblityHandler} className=\"rules-button\">\n          ルールを隠す{\" \"}\n        </button>\n        <div className=\"rules-div\">\n          <h3>ルール</h3>\n          <p>\n            『カタカナ語を日本語だけで説明する』というカタカナ禁止カードゲームです。\n            <br />\n            <br />\n            「チョコレート」や「キャンプ」といったカタカナ語のお題を説明するのにカタカナを使用することができません。\n            <br />\n            <br />\n            <h3>やり方</h3>\n            <br />\n            <br />\n            ファスト：お使いの携帯電話とお友達の携帯電話でこのサイトを開きます。\n            <br />\n            <br />\n            セコンド：最初のプレーヤーは、カタカナ語を使用せずに、画面上の単語を他のプレーヤーに説明します。\n            <br />\n            <br />\n            サード：2番目のプレーヤーが単語を正しく推測した場合、役割を切り替えます。\n            <br />\n            <br />\n          </p>\n          <button onClick={changeLanguage} className=\"language-button\">\n            {\" \"}\n            English{\" \"}\n          </button>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <button onClick={setRulesVisiblityHandler} className=\"rules-button\">\n        {\" \"}\n        Rules・ルール{\" \"}\n      </button>\n    );\n  }\n};\n\nexport default Rules;\n","import React, { useState } from \"react\";\nimport \"./Word.css\";\n\nconst Word = (props) => {\n  const [currentWord, setCurrentWord] = useState(props.words[0]);\n\n  const currentWordHandler = () => {\n    const randomIndex = Math.floor(Math.random() * props.words.length);\n    setCurrentWord(props.words[randomIndex]);\n  };\n\n  return (\n    <div className=\"word-div\">\n      <div className=\"word-card\">\n        <h1>{currentWord}</h1>\n      </div>\n      <button onClick={currentWordHandler} className=\"word-button\">\n        新しい単語\n      </button>\n    </div>\n  );\n};\n\nexport default Word;\n","import React from \"react\";\nimport \"../Components/TimerDiv.css\";\n\nconst CountDownTimer = (props) => {\n  const { hours = 0, minutes = 0, seconds = 60 } = props.hoursMinSecs;\n  const [[hrs, mins, secs], setTime] = React.useState([\n    hours,\n    minutes,\n    seconds,\n  ]);\n\n  const tick = () => {\n    if (hrs === 0 && mins === 0 && secs === 0) reset();\n    else if (mins === 0 && secs === 0) {\n      setTime([hrs - 1, 59, 59]);\n    } else if (secs === 0) {\n      setTime([hrs, mins - 1, 59]);\n    } else {\n      setTime([hrs, mins, secs - 1]);\n    }\n  };\n\n  const reset = () =>\n    setTime([parseInt(hours), parseInt(minutes), parseInt(seconds)]);\n\n  React.useEffect(() => {\n    const timerId = setInterval(() => tick(), 1000);\n    return () => clearInterval(timerId);\n  });\n\n  //button to reset the timer\n  const resetTimer = () => {\n    reset();\n  };\n\n  return (\n    <div>\n      <p>{`${hrs.toString().padStart(2, \"0\")}:${mins\n        .toString()\n        .padStart(2, \"0\")}:${secs.toString().padStart(2, \"0\")}`}</p>\n      <button onClick={resetTimer}>リセット</button>\n    </div>\n  );\n};\n\nexport default CountDownTimer;\n","import React, { useState } from \"react\";\nimport Timer from \"./Timer\";\nimport \"../Components/Rules.css\";\n\nconst TimerDiv = (props) => {\n  const [timerVisibility, setTimerVisibility] = useState(false);\n\n  if (timerVisibility === true) {\n    console.log(\"this should be working\");\n\n    return (\n      <div>\n        <button\n          className=\"rules-button\"\n          onClick={() => setTimerVisibility(false)}\n        >\n          タイマーを隠す{\" \"}\n        </button>\n        <Timer hoursMinSecs={props.hoursMinSecs} />\n      </div>\n    );\n  } else {\n    return (\n      <button className=\"rules-button\" onClick={() => setTimerVisibility(true)}>\n        タイマーをスタートする{\" \"}\n      </button>\n    );\n  }\n};\n\nexport default TimerDiv;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Title from \"./Components/Title\";\nimport Rules from \"./Components/Rules\";\nimport Word from \"./Components/Word\";\nimport TimerDiv from \"./Components/TimerDiv\";\nconst Words = [\n  // a\n  \"アレルギー\",\n  \"アバカド\",\n  \"アウトドア\",\n  // i\n  \"イントネーション\",\n  \"イヤリング\",\n  \"インフルエンザ\",\n  \"インタネット\",\n  // u\n  \"ウェブサイト\",\n  // e\n  \"エレガント\",\n  // o\n  \"オートマチック\",\n  // ka\n  \"カメラ\",\n  // ki\n  // ku\n  \"クリーニング\",\n  \"クレヨン\",\n  \"クロール\",\n  \"クイズ\",\n  // ke\n  // ko\n  \"コンディショナー\",\n  \"コーヒー\",\n  // sa\n  \"サウナ\",\n  \"サンタクロース\",\n  // shi\n  \"ショッピング\",\n  \"シャンデリア\",\n  // su\n  \"スリッパ\",\n  \"ストロー\",\n  \"スポーツ\",\n  \"スムージー\",\n  \"スカート\",\n  \"スカイダイビング\",\n  \"スマートフォン\",\n  // se\n  \"センチメートル\",\n  \"セーター\",\n  // so\n  \"ソース\",\n  \"ソーセージ\",\n  // ta\n  \"タイムカプセル\",\n  \"タイムマシーン\",\n  \"タオル\",\n  // chi\n  \"チョコレート\",\n  \"チーズ\",\n  \"チーズフォンデュ\",\n  // tsu\n  \"ツイッター\",\n  // te\n  \"テレビ\",\n  \"テント\",\n  // to\n  // na\n  // ni\n  // nu\n  // ne\n  \"ネクタイー\",\n  // no\n  // ha\n  \"ハンガー\",\n  \"バニラシェイク\",\n  // hi\n  // fu\n  \"フライドポテト\",\n  \"フィクション\",\n  // he\n  \"ヘリコプター\",\n  // ho\n  \"ホームページ\",\n  \"ホットサンド\",\n  // ma\n  \"マイクロソフト\",\n  \"マウンテンバイク\",\n  // mi\n  \"ミートボール\",\n  // mu\n  // me\n  \"メール\",\n  \"メモ\",\n  // mo\n  // ya\n  // yu\n  // yo\n  \"ヨーグルト\",\n  // ra\n  \"ランダム\",\n  // ri\n  // ru\n  // re\n  // ro\n  \"ロケット\",\n  // wa\n  \"ワンピース\",\n  // wo\n  // n\n  // ga\n  // gi\n  // gu\n  \"グラタン\",\n  // ge\n  // go\n  \"ゴルフ\",\n  // za\n  // ji\n  // zu\n  // ze\n  // zo\n\n  // da\n\n  // di\n  // du\n  // de\n  \"デジタル\",\n  \"ディスプレイ\",\n  // do\n  \"ドッジボール\",\n  // ba\n  \"バター\",\n  // bi\n  // bu\n  \"ブランデー\",\n  \"ブレスレット\",\n  \"ブルーベリー\",\n  // be\n  \"ベーコン\",\n  \"ベストセラー\",\n  // bo\n  \"ボーリング\",\n  // pa\n  \"パラシュート\",\n  \"パイナップル\",\n  // pi\n  // pu\n  \"プライバシー\",\n  // pe\n  // po\n  \"ポップコーン\",\n  // kya\n  // kyu\n  // kyo\n  // za\n  // ji\n  // zu\n  // ze\n  // zo\n  \"ゾンビ\",\n];\n\nfunction App() {\n  const hoursMinSecs = { hours: 0, minutes: 5, seconds: 0 };\n  return (\n    <div className=\"App\">\n      <Title />\n      <Word words={Words} />\n      <Rules />\n      <TimerDiv hoursMinSecs={hoursMinSecs} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}